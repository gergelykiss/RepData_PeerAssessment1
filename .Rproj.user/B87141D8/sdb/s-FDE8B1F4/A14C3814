{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\nauthor: \"Gergely Kiss\"\ndate: \"Saturday, February 14, 2015\"\noutput: \n  html_document:\n    keep_md: true\n---\n\n## Loading and preprocessing the data\nLoading and formatting the original data into a data frame. Date coloumns are converted to an appropriate type.\n\n```{r, echo=TRUE}\ndata <- read.csv(\"activity.csv\", header=TRUE)\ndata$date <- as.Date(data$date)\n```\n\nDaily steps histogram:\n\n```{r, echo=TRUE}\nsteps <- aggregate(x=data$steps, by=list(data$date), FUN=\"sum\")\nnames(steps) <- c(\"date\", \"steps\")\nsteps$date <- as.Date(steps$date)\n```\n\nThe histogram shows the daily steps in 10 ranges\n```{r, echo=TRUE}\nhist(steps$steps, breaks=10, xlab=\"Daily steps taken\", ylab=\"Number of days\", main = \"Histogram of daily steps\")\n```\n\n\n## What is mean total number of steps taken per day?\nMean of the total number of steps taken per day:\n\n```{r, echo=TRUE}\nmean(steps$steps, na.rm=TRUE)\n```\n\n\nMedian of the total number of steps taken per day:\n\n```{r, echo=TRUE}\nmedian(steps$steps, na.rm=TRUE)\n```\n\n\n## What is the average daily activity pattern?\n\n```{r, echo=TRUE}\ninterval <- aggregate(x=data$steps, by=list(data$interval), FUN=mean, na.rm=TRUE)\nnames(interval) <- c(\"interval\", \"averagesteps\")\nbarplot(interval$averagesteps, xlab=\"Intervals\", ylab=\"Average steps\")\n```\n\nInterval with the highest average step rate:\n\n```{r, echo=TRUE} \ninterval[which.max(interval$averagesteps),1] \n```\n\n\n## Imputing missing values\n\nThe total number of missing values in the dataset:\n\n```{r, echo=TRUE} \nsum(is.na(data$steps))\n```\n\nI substitute the missing (\"NA\") values with the average number of steps taken in the same interval during the whole measurement period\n\n```{r, echo=TRUE} \nnonadata <- data\nfor (i in 1:nrow(data)) {\n  if (is.na(data[i,1])) {\n    nonadata[i,1] <- interval[which(interval[,1] == nonadata[i,3]) ,2]\n  }\n}\n```\n\nHistogram of the new data set:\n\n```{r, echo=TRUE}\nnonasteps <- aggregate(x=nonadata$steps, by=list(data$date), FUN=\"sum\")\nnames(nonasteps) <- c(\"date\", \"steps\")\nnonasteps$date <- as.Date(nonasteps$date)\nhist(nonasteps$steps, breaks=10, xlab=\"Daily steps taken\", ylab=\"Number of days\", main = \"Histogram of daily steps (NAs replaced)\" )\n```\n\nMean of the total number of steps taken per day without NAs\n\n```{r, echo=TRUE}\nmean(nonasteps$steps)\n```\n\n\nMedian of the total number of steps taken per day without NAs\n\n```{r, echo=TRUE}\nmedian(nonasteps$steps)\n```\n\nThere is no big difference between the original and the \"expanded\" data set. Since I filled the missing fields with the mean values, the sum median became the same as the mean\n\n## Are there differences in activity patterns between weekdays and weekends?\n\nFor displaying multiple plots in one figure, I use the multiplot function. \nSource: http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/\n\n```{r, echo=FALSE}\n# Multiple plot function\n#\n# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)\n# - cols:   Number of columns in layout\n# - layout: A matrix specifying the layout. If present, 'cols' is ignored.\n#\n# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),\n# then plot 1 will go in the upper left, 2 will go in the upper right, and\n# 3 will go all the way across the bottom.\n#\nmultiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {\n  require(grid)\n\n  # Make a list from the ... arguments and plotlist\n  plots <- c(list(...), plotlist)\n\n  numPlots = length(plots)\n\n  # If layout is NULL, then use 'cols' to determine layout\n  if (is.null(layout)) {\n    # Make the panel\n    # ncol: Number of columns of plots\n    # nrow: Number of rows needed, calculated from # of cols\n    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),\n                    ncol = cols, nrow = ceiling(numPlots/cols))\n  }\n\n if (numPlots==1) {\n    print(plots[[1]])\n\n  } else {\n    # Set up the page\n    grid.newpage()\n    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))\n\n    # Make each plot, in the correct location\n    for (i in 1:numPlots) {\n      # Get the i,j matrix positions of the regions that contain this subplot\n      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))\n\n      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,\n                                      layout.pos.col = matchidx$col))\n    }\n  }\n}\n```\n\nMy system is non-english, so I set the system variables to english for my reviewers to understand the weekend names:\n\n```{r, echo=TRUE}\nSys.setlocale(\"LC_TIME\", \"C\")\n\nlibrary(ggplot2)\n\nnonadata$weekday <- 0\n\nfor (i in 1:nrow(nonadata)) {\n  if ((!weekdays(nonadata[i,2]) %in% c('Saturday','Sunday'))) {\n    nonadata[i,4] <- 1\n  }\n}\n\n\nintervalwd <- aggregate(x=nonadata[nonadata$weekday==1,1], by=list(nonadata[nonadata$weekday==1,3]), FUN=mean, na.rm=TRUE)\n\nintervalwe <- aggregate(x=nonadata[nonadata$weekday==0,1], by=list(nonadata[nonadata$weekday==0,3]), FUN=mean, na.rm=TRUE)\n\nnames(intervalwd) <- c(\"interval\", \"steps\")\nnames(intervalwe) <- c(\"interval\", \"steps\")\n\n\nplotwd <- qplot(interval, steps, data = intervalwd, geom=\"line\") + ggtitle(\"5 minutes activity on weekdays\")\nplotwe <- qplot(interval, steps, data = intervalwe, geom=\"line\") + ggtitle(\"5 minutes activity on weekends\")\n\nmultiplot(plotwd, plotwe)\n\n```",
    "created" : 1424032507050.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2581816753",
    "id" : "A14C3814",
    "lastKnownWriteTime" : 1424032580,
    "path" : "C:/Projects/gitrepo/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}